x-common-env: &common-env
  PYTHONPATH: /app/src
  ENVIRONMENT: local
  VAULT_URL: http://139.59.13.238:8200
  VAULT_TOKEN: hvs.b0vVFFPuKZotgXT2pcJ6pZLM
  SECRET_PATH: v1/kv/data/schooldb
  ASYNC_DATABASE_DRIVER: postgresql+asyncpg
  DB_USERNAME: postgres
  DB_PASSWORD: postgres
  DB_HOST: 192.168.0.219
  DB_PORT: 5433
  REPLICA_DB_NAME: school_replica
  HQ_ADMIN_DB_NAME: hq_admin
  CORS_ORIGINS: http://192.168.0.219,http://192.168.0.219:3000,http://192.168.0.219:3001,http://localhost,http://localhost:3000,http://localhost:3001


services:
  nginx:
    image: nginx:alpine
    container_name: sms_nginx
    ports:
      - "80:80"
    depends_on:
      vendor_service:
        condition: service_healthy
      hq_service:
        condition: service_healthy
      config_service:
        condition: service_healthy
      chat_service:
        condition: service_healthy
      user_service:
        condition: service_healthy
      library_service:
        condition: service_healthy
      forms_service:
        condition: service_healthy
      fee_service:
        condition: service_healthy
      payroll_service:
        condition: service_healthy
      curriculum_service:
        condition: service_healthy
      announcement_service:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html:/usr/share/nginx/html
    networks:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  vendor_service:
    build:
      context: ./services/vendor_service
      dockerfile: Dockerfile
    container_name: sms_vendor_service
    environment:
      <<: *common-env
    expose:
      - "8001"
    volumes:
      - ./services/vendor_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  hq_service:
    build:
      context: ./services/hq_service
      dockerfile: Dockerfile
    container_name: sms_hq_service
    environment:
      <<: *common-env
    expose:
      - "8002"
    volumes:
      - ./services/hq_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8002/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  config_service:
    build:
      context: ./services/config_service
      dockerfile: Dockerfile
    container_name: sms_config_service
    environment:
      <<: *common-env
    expose:
      - "8003"
    volumes:
      - ./services/config_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8003/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  chat_service:
    build:
      context: ./services/chat_service
      dockerfile: Dockerfile
    container_name: sms_chat_service
    environment:
      <<: *common-env
    expose:
      - "8004"
    volumes:
      - ./services/chat_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8004/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  user_service:
    build:
      context: ./services/user_service
      dockerfile: Dockerfile
    container_name: sms_user_service
    environment:
      <<: *common-env
    expose:
      - "8005"
    volumes:
      - ./services/user_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8005/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  library_service:
    build:
      context: ./services/library_service
      dockerfile: Dockerfile
    container_name: sms_library_service
    environment:
      <<: *common-env
    expose:
      - "8006"
    volumes:
      - ./services/library_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8006/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  forms_service:
    build:
      context: ./services/forms_service
      dockerfile: Dockerfile
    container_name: sms_forms_service
    environment:
      <<: *common-env
    expose:
      - "8007"
    volumes:
      - ./services/forms_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8007/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  fee_service:
    build:
      context: ./services/fee_service
      dockerfile: Dockerfile
    container_name: sms_fee_service
    environment:
      <<: *common-env
    expose:
      - "8008"
    volumes:
      - ./services/fee_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8008/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  payroll_service:
    build:
      context: ./services/payroll_service
      dockerfile: Dockerfile
    container_name: sms_payroll_service
    environment:
      <<: *common-env
    expose:
      - "8009"
    volumes:
      - ./services/payroll_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8009/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  curriculum_service:
    build:
      context: ./services/curriculum_service
      dockerfile: Dockerfile
    container_name: sms_curriculum_service
    environment:
      <<: *common-env
    expose:
      - "8010"
    volumes:
      - ./services/curriculum_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8010/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

  announcement_service:
    build:
      context: ./services/announcement_service
      dockerfile: Dockerfile
    container_name: sms_announcement_service
    environment:
      <<: *common-env
    expose:
      - "8011"
    volumes:
      - ./services/announcement_service:/app
      - ./shared:/app/src/shared
    networks:
      - backend
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8011/health')"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    restart: unless-stopped

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  shared:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/shared
      o: bind
